require("nvchad.mappings")

local map = vim.keymap.set
local nomap = vim.keymap.del

map("i", "<C-l>", "<Esc>[s1z=`]a", { desc = "Fix spell" })
map("n", ";", ":", { desc = "CMD enter command mode" })

-- lspconfig
nomap("n", "<leader>fm")
map("n", "ff", function()
	require("conform").format({ async = true, lsp_fallback = true }, nil)
end, { desc = "conform formatting" })
nomap("n", "<leader>lf")
map("n", "fF", vim.diagnostic.open_float, { desc = "Lsp floating diagnostics" })
map("n", "fD", function()
	vim.lsp.buf.declaration()
end, { desc = "LSP declaration" })
map("n", "fd", function()
	vim.lsp.buf.definition()
end, { desc = "LSP definition" })
map("n", "fk", function()
	vim.lsp.buf.hover()
end, { desc = "LSP hover" })
map("n", "fi", function()
	vim.lsp.buf.implementation()
end, { desc = "LSP implementation" })
map("n", "fs", function()
	vim.lsp.buf.signature_help()
end, { desc = "LSP signature help" })
map("n", "ft", function()
	vim.lsp.buf.type_definition()
end, { desc = "LSP definition type" })
map("n", "fr", ":IncRename <C-R><C-W>", { desc = "LSP rename" })
map("n", "fa", function()
	vim.lsp.buf.code_action()
end, { desc = "LSP code action" })
map("n", "fR", function()
	vim.lsp.buf.references()
end, { desc = "LSP references" })

-- telescope
nomap("n", "<leader>cm")
nomap("n", "<leader>gt")
nomap("n", "<leader>pt")
nomap("n", "<leader>th")

nomap("n", "<leader>cc")
nomap("n", "<leader>rn")
nomap("n", "<leader>wk")
nomap("n", "<leader>wK")
nomap("n", "<leader>ch")
nomap("n", "<leader>ma")
